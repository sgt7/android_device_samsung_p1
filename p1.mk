# Copyright (C) 2010 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# This file is the device-specific product definition file for
# crespo. It lists all the overlays, files, modules and properties
# that are specific to this hardware: i.e. those are device-specific
# drivers, configuration files, settings, etc...

# Note that crespo is not a fully open device. Some of the drivers
# aren't publicly available in all circumstances, which means that some
# of the hardware capabilities aren't present in builds where those
# drivers aren't available. Such cases are handled by having this file
# separated into two halves: this half here contains the parts that
# are available to everyone, while another half in the vendor/ hierarchy
# augments that set with the parts that are only relevant when all the
# associated drivers are available. Aspects that are irrelevant but
# harmless in no-driver builds should be kept here for simplicity and
# transparency. There are two variants of the half that deals with
# the unavailable drivers: one is directly checked into the unreleased
# vendor tree and is used by engineers who have access to it. The other
# is generated by setup-makefile.sh in the same directory as this files,
# and is used by people who have access to binary versions of the drivers
# but not to the original vendor tree. Be sure to update both.


# These is the hardware-specific overlay, which points to the location
# of hardware-specific resource overrides, typically the frameworks and
# application settings that are stored in resourced.


DEVICE_PACKAGE_OVERLAYS := device/samsung/p1/overlay

# Init files
PRODUCT_COPY_FILES += \
	device/samsung/p1/init.gt-p1000.rc:root/init.gt-p1000.rc \
	device/samsung/p1/ueventd.gt-p1000.rc:root/ueventd.gt-p1000.rc 

# vold
PRODUCT_COPY_FILES += \
        device/samsung/p1/prebuilt/etc/vold.fstab:system/etc/vold.fstab

# RIL
# Permissions
PRODUCT_COPY_FILES += \
	frameworks/base/data/etc/android.hardware.telephony.gsm.xml:system/etc/permissions/android.hardware.telephony.gsm.xml

# Device-specific packages
PRODUCT_PACKAGES := \
	SamsungServiceMode

# Build.prop overrides
PRODUCT_PROPERTY_OVERRIDES += \
       ro.telephony.call_ring.delay=3000 \
       ro.telephony.call_ring.absent=true \
       mobiledata.interfaces=pdp0,eth0,gprs \
       ro.telephony.ril.v3=icccardstatus,datacall,signalstrength,facilitylock \
       ro.ril.enable.managed.roaming=1 \
       ro.ril.oem.nosim.ecclist=911,112,999,000,08,118,120,122,110,119,995 \
       ro.ril.emc.mode=2

# Kernel modules
PRODUCT_COPY_FILES += $(foreach module,\
    $(filter-out $(RAMDISK_MODULES),$(wildcard device/samsung/p1/modules/*.ko)),\
    $(module):system/lib/modules/$(notdir $(module)))

ifeq ($(TARGET_PREBUILT_KERNEL),)
    LOCAL_KERNEL := device/samsung/p1/kernel
else
    LOCAL_KERNEL := $(TARGET_PREBUILT_KERNEL)
endif

PRODUCT_COPY_FILES += \
    $(LOCAL_KERNEL):kernel

# Inherit P1 common device configuration.
$(call inherit-product, device/samsung/p1-common/device_base.mk)

# Propreitary drivers
$(call inherit-product-if-exists, vendor/samsung/p1/p1-vendor.mk)
